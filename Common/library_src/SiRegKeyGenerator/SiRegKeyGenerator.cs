//*************************************************************************
// Copyright (C) Security Innovation, LLC, 2002-2003 – All Rights Reserved.
//
// File:		SiRegKeyGenerator.cs
//
// DESCRIPTION: Contains the class that provides the UI for generating a 
//	product key
//
//=========================================================================
// Modification History
//
// Date         SCR  Name        Purpose
// -----------  ---  ----------- ------------------------------------------
// 09 Sep 2003		 B Shirey	 File created.
//*************************************************************************
using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using System.Data;
using ManagedRegistrationLibrary;

namespace SiRegKeyGenerator
{
	//*************************************************************************
	// the class that provides the UI for generating a product key
	//*************************************************************************
	public class SiRegKeyGenerator : System.Windows.Forms.Form
	{
		private System.Windows.Forms.ComboBox keyVersionComboBox;
		private System.Windows.Forms.ComboBox functionalityComboBox;
		private System.Windows.Forms.ComboBox productComboBox;
		private System.Windows.Forms.NumericUpDown numDaysValidNumericUpDown;
		private System.Windows.Forms.NumericUpDown numLicensesNumericUpDown;
		private System.Windows.Forms.TextBox registrationKeyTextBox;
		private System.Windows.Forms.Button getNextSerialNumberButton;
		private System.Windows.Forms.TextBox serialNumberTextBox;
		private System.Windows.Forms.Button generateKeyButton;
		private System.Windows.Forms.Button decodeLicenseButton;
		private System.Windows.Forms.CheckBox siteLicenseCheckBox;
		private System.Windows.Forms.CheckBox noExpirationCheckBox;
		private System.Windows.Forms.ComboBox customerTypeComboBox;
		private System.Data.OleDb.OleDbConnection regDataDbConnection;
		private System.Windows.Forms.TextBox customerNameTextBox;
		private System.Windows.Forms.TextBox companyNameTextBox;
		private System.Data.OleDb.OleDbDataAdapter regDataDbDataAdapter;
		private System.Data.OleDb.OleDbCommand regDataSelectCommand;
		private System.Data.OleDb.OleDbCommand regDataInsertCommand;
		private System.Data.OleDb.OleDbCommand regDataUpdateCommand;
		private System.Data.OleDb.OleDbCommand regDataDeleteCommand;
		private System.Windows.Forms.GroupBox licenseTypeGroupBox;
		private System.Windows.Forms.Label keyVersionLabel;
		private System.Windows.Forms.Label functionalityLabel;
		private System.Windows.Forms.Label customerTypeLabel;
		private System.Windows.Forms.Label productLabel;
		private System.Windows.Forms.Label licensesPurchasedLabel;
		private System.Windows.Forms.Label daysValidLabel;
		private System.Windows.Forms.GroupBox licenseDetailsGroupBox;
		private System.Windows.Forms.Label serialNumberLabel;
		private System.Windows.Forms.GroupBox snKeyGroupBox;
		private System.Windows.Forms.Label registrationKeyLabel;
		private System.Windows.Forms.GroupBox customerInfoGroupBox;
		private System.Windows.Forms.Label companyNameLabel;
		private System.Windows.Forms.Label customerNameLabel;

		/// Required designer variable.
		private System.ComponentModel.Container components = null;

		//*************************************************************************
		// Method:		SiRegKeyGenerator
		// Description: Constructor for the SiRegKeyGenerator class
		//
		// Parameters:
		//	None
		//
		// Return Value: None
		//*************************************************************************
		public SiRegKeyGenerator()
		{
			InitializeComponent();
		}

		//*************************************************************************
		// Method:		Dispose
		// Description: Cleans up data from this class
		//
		// Parameters:
		//	disposing - true if the class is being disposed, false otherwise
		//
		// Return Value: None
		//*************************************************************************
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if (components != null) 
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region Windows Form Designer generated code
		
		//*************************************************************************
		// Method:		InitializeComponent
		// Description: inits all the controls for the UI.  Generated by designer
		//
		// Parameters:
		//	None
		//
		// Return Value: None
		//*************************************************************************
		private void InitializeComponent()
		{
			this.licenseTypeGroupBox = new System.Windows.Forms.GroupBox();
			this.keyVersionComboBox = new System.Windows.Forms.ComboBox();
			this.keyVersionLabel = new System.Windows.Forms.Label();
			this.functionalityComboBox = new System.Windows.Forms.ComboBox();
			this.functionalityLabel = new System.Windows.Forms.Label();
			this.customerTypeLabel = new System.Windows.Forms.Label();
			this.customerTypeComboBox = new System.Windows.Forms.ComboBox();
			this.productLabel = new System.Windows.Forms.Label();
			this.productComboBox = new System.Windows.Forms.ComboBox();
			this.licensesPurchasedLabel = new System.Windows.Forms.Label();
			this.daysValidLabel = new System.Windows.Forms.Label();
			this.licenseDetailsGroupBox = new System.Windows.Forms.GroupBox();
			this.noExpirationCheckBox = new System.Windows.Forms.CheckBox();
			this.numDaysValidNumericUpDown = new System.Windows.Forms.NumericUpDown();
			this.numLicensesNumericUpDown = new System.Windows.Forms.NumericUpDown();
			this.siteLicenseCheckBox = new System.Windows.Forms.CheckBox();
			this.serialNumberLabel = new System.Windows.Forms.Label();
			this.snKeyGroupBox = new System.Windows.Forms.GroupBox();
			this.registrationKeyTextBox = new System.Windows.Forms.TextBox();
			this.registrationKeyLabel = new System.Windows.Forms.Label();
			this.getNextSerialNumberButton = new System.Windows.Forms.Button();
			this.serialNumberTextBox = new System.Windows.Forms.TextBox();
			this.generateKeyButton = new System.Windows.Forms.Button();
			this.decodeLicenseButton = new System.Windows.Forms.Button();
			this.regDataDbConnection = new System.Data.OleDb.OleDbConnection();
			this.customerInfoGroupBox = new System.Windows.Forms.GroupBox();
			this.companyNameTextBox = new System.Windows.Forms.TextBox();
			this.customerNameTextBox = new System.Windows.Forms.TextBox();
			this.companyNameLabel = new System.Windows.Forms.Label();
			this.customerNameLabel = new System.Windows.Forms.Label();
			this.regDataDbDataAdapter = new System.Data.OleDb.OleDbDataAdapter();
			this.regDataDeleteCommand = new System.Data.OleDb.OleDbCommand();
			this.regDataInsertCommand = new System.Data.OleDb.OleDbCommand();
			this.regDataSelectCommand = new System.Data.OleDb.OleDbCommand();
			this.regDataUpdateCommand = new System.Data.OleDb.OleDbCommand();
			this.licenseTypeGroupBox.SuspendLayout();
			this.licenseDetailsGroupBox.SuspendLayout();
			((System.ComponentModel.ISupportInitialize)(this.numDaysValidNumericUpDown)).BeginInit();
			((System.ComponentModel.ISupportInitialize)(this.numLicensesNumericUpDown)).BeginInit();
			this.snKeyGroupBox.SuspendLayout();
			this.customerInfoGroupBox.SuspendLayout();
			this.SuspendLayout();
			// 
			// licenseTypeGroupBox
			// 
			this.licenseTypeGroupBox.Controls.AddRange(new System.Windows.Forms.Control[] {
																							  this.keyVersionComboBox,
																							  this.keyVersionLabel,
																							  this.functionalityComboBox,
																							  this.functionalityLabel,
																							  this.customerTypeLabel,
																							  this.customerTypeComboBox,
																							  this.productLabel,
																							  this.productComboBox});
			this.licenseTypeGroupBox.Location = new System.Drawing.Point(8, 96);
			this.licenseTypeGroupBox.Name = "licenseTypeGroupBox";
			this.licenseTypeGroupBox.Size = new System.Drawing.Size(280, 128);
			this.licenseTypeGroupBox.TabIndex = 0;
			this.licenseTypeGroupBox.TabStop = false;
			this.licenseTypeGroupBox.Text = "License Type:";
			// 
			// keyVersionComboBox
			// 
			this.keyVersionComboBox.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
			this.keyVersionComboBox.Items.AddRange(new object[] {
																	"Holodeck Basic"});
			this.keyVersionComboBox.Location = new System.Drawing.Point(8, 88);
			this.keyVersionComboBox.Name = "keyVersionComboBox";
			this.keyVersionComboBox.Size = new System.Drawing.Size(121, 21);
			this.keyVersionComboBox.TabIndex = 7;
			// 
			// keyVersionLabel
			// 
			this.keyVersionLabel.Location = new System.Drawing.Point(8, 72);
			this.keyVersionLabel.Name = "keyVersionLabel";
			this.keyVersionLabel.Size = new System.Drawing.Size(80, 23);
			this.keyVersionLabel.TabIndex = 6;
			this.keyVersionLabel.Text = "Key Version:";
			// 
			// functionalityComboBox
			// 
			this.functionalityComboBox.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
			this.functionalityComboBox.Items.AddRange(new object[] {
																	   "Feature Disabled Trial",
																	   "Time Trial",
																	   "Full Version"});
			this.functionalityComboBox.Location = new System.Drawing.Point(152, 88);
			this.functionalityComboBox.Name = "functionalityComboBox";
			this.functionalityComboBox.Size = new System.Drawing.Size(121, 21);
			this.functionalityComboBox.TabIndex = 5;
			// 
			// functionalityLabel
			// 
			this.functionalityLabel.Location = new System.Drawing.Point(152, 72);
			this.functionalityLabel.Name = "functionalityLabel";
			this.functionalityLabel.Size = new System.Drawing.Size(72, 23);
			this.functionalityLabel.TabIndex = 4;
			this.functionalityLabel.Text = "Functionality:";
			// 
			// customerTypeLabel
			// 
			this.customerTypeLabel.Location = new System.Drawing.Point(152, 24);
			this.customerTypeLabel.Name = "customerTypeLabel";
			this.customerTypeLabel.Size = new System.Drawing.Size(88, 16);
			this.customerTypeLabel.TabIndex = 3;
			this.customerTypeLabel.Text = "Customer Type:";
			// 
			// customerTypeComboBox
			// 
			this.customerTypeComboBox.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
			this.customerTypeComboBox.Items.AddRange(new object[] {
																	  "Normal Customer"});
			this.customerTypeComboBox.Location = new System.Drawing.Point(152, 40);
			this.customerTypeComboBox.Name = "customerTypeComboBox";
			this.customerTypeComboBox.Size = new System.Drawing.Size(121, 21);
			this.customerTypeComboBox.TabIndex = 2;
			// 
			// productLabel
			// 
			this.productLabel.Location = new System.Drawing.Point(8, 24);
			this.productLabel.Name = "productLabel";
			this.productLabel.Size = new System.Drawing.Size(56, 16);
			this.productLabel.TabIndex = 1;
			this.productLabel.Text = "Product:";
			// 
			// productComboBox
			// 
			this.productComboBox.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
			this.productComboBox.Items.AddRange(new object[] {
																 "Holodeck"});
			this.productComboBox.Location = new System.Drawing.Point(8, 40);
			this.productComboBox.Name = "productComboBox";
			this.productComboBox.Size = new System.Drawing.Size(121, 21);
			this.productComboBox.TabIndex = 0;
			// 
			// licensesPurchasedLabel
			// 
			this.licensesPurchasedLabel.Location = new System.Drawing.Point(8, 24);
			this.licensesPurchasedLabel.Name = "licensesPurchasedLabel";
			this.licensesPurchasedLabel.Size = new System.Drawing.Size(120, 16);
			this.licensesPurchasedLabel.TabIndex = 8;
			this.licensesPurchasedLabel.Text = "# Licenses Purchased:";
			// 
			// daysValidLabel
			// 
			this.daysValidLabel.Location = new System.Drawing.Point(152, 24);
			this.daysValidLabel.Name = "daysValidLabel";
			this.daysValidLabel.Size = new System.Drawing.Size(100, 16);
			this.daysValidLabel.TabIndex = 9;
			this.daysValidLabel.Text = "# Days Valid:";
			// 
			// licenseDetailsGroupBox
			// 
			this.licenseDetailsGroupBox.Controls.AddRange(new System.Windows.Forms.Control[] {
																								 this.noExpirationCheckBox,
																								 this.numDaysValidNumericUpDown,
																								 this.licensesPurchasedLabel,
																								 this.daysValidLabel,
																								 this.numLicensesNumericUpDown,
																								 this.siteLicenseCheckBox});
			this.licenseDetailsGroupBox.Location = new System.Drawing.Point(8, 232);
			this.licenseDetailsGroupBox.Name = "licenseDetailsGroupBox";
			this.licenseDetailsGroupBox.Size = new System.Drawing.Size(280, 96);
			this.licenseDetailsGroupBox.TabIndex = 10;
			this.licenseDetailsGroupBox.TabStop = false;
			this.licenseDetailsGroupBox.Text = "License Details:";
			// 
			// noExpirationCheckBox
			// 
			this.noExpirationCheckBox.Location = new System.Drawing.Point(152, 64);
			this.noExpirationCheckBox.Name = "noExpirationCheckBox";
			this.noExpirationCheckBox.TabIndex = 13;
			this.noExpirationCheckBox.Text = "No Expiration?";
			this.noExpirationCheckBox.CheckedChanged += new System.EventHandler(this.noExpriationCheckBox_CheckedChanged);
			// 
			// numDaysValidNumericUpDown
			// 
			this.numDaysValidNumericUpDown.Location = new System.Drawing.Point(152, 40);
			this.numDaysValidNumericUpDown.Maximum = new System.Decimal(new int[] {
																					  999,
																					  0,
																					  0,
																					  0});
			this.numDaysValidNumericUpDown.Minimum = new System.Decimal(new int[] {
																					  1,
																					  0,
																					  0,
																					  0});
			this.numDaysValidNumericUpDown.Name = "numDaysValidNumericUpDown";
			this.numDaysValidNumericUpDown.TabIndex = 12;
			this.numDaysValidNumericUpDown.Value = new System.Decimal(new int[] {
																					30,
																					0,
																					0,
																					0});
			// 
			// numLicensesNumericUpDown
			// 
			this.numLicensesNumericUpDown.Location = new System.Drawing.Point(8, 40);
			this.numLicensesNumericUpDown.Maximum = new System.Decimal(new int[] {
																					 10000,
																					 0,
																					 0,
																					 0});
			this.numLicensesNumericUpDown.Minimum = new System.Decimal(new int[] {
																					 1,
																					 0,
																					 0,
																					 0});
			this.numLicensesNumericUpDown.Name = "numLicensesNumericUpDown";
			this.numLicensesNumericUpDown.TabIndex = 11;
			this.numLicensesNumericUpDown.Value = new System.Decimal(new int[] {
																				   1,
																				   0,
																				   0,
																				   0});
			// 
			// siteLicenseCheckBox
			// 
			this.siteLicenseCheckBox.Location = new System.Drawing.Point(8, 64);
			this.siteLicenseCheckBox.Name = "siteLicenseCheckBox";
			this.siteLicenseCheckBox.TabIndex = 17;
			this.siteLicenseCheckBox.Text = "Site License?";
			this.siteLicenseCheckBox.CheckedChanged += new System.EventHandler(this.siteLicenseCheckBox_CheckedChanged);
			// 
			// serialNumberLabel
			// 
			this.serialNumberLabel.Location = new System.Drawing.Point(8, 24);
			this.serialNumberLabel.Name = "serialNumberLabel";
			this.serialNumberLabel.Size = new System.Drawing.Size(112, 16);
			this.serialNumberLabel.TabIndex = 13;
			this.serialNumberLabel.Text = "Serial Number:";
			// 
			// snKeyGroupBox
			// 
			this.snKeyGroupBox.Controls.AddRange(new System.Windows.Forms.Control[] {
																						this.registrationKeyTextBox,
																						this.registrationKeyLabel,
																						this.getNextSerialNumberButton,
																						this.serialNumberTextBox,
																						this.serialNumberLabel});
			this.snKeyGroupBox.Location = new System.Drawing.Point(8, 336);
			this.snKeyGroupBox.Name = "snKeyGroupBox";
			this.snKeyGroupBox.Size = new System.Drawing.Size(280, 120);
			this.snKeyGroupBox.TabIndex = 14;
			this.snKeyGroupBox.TabStop = false;
			this.snKeyGroupBox.Text = "Serial Number / Reg Key for Customer:";
			// 
			// registrationKeyTextBox
			// 
			this.registrationKeyTextBox.Location = new System.Drawing.Point(8, 88);
			this.registrationKeyTextBox.Name = "registrationKeyTextBox";
			this.registrationKeyTextBox.Size = new System.Drawing.Size(256, 20);
			this.registrationKeyTextBox.TabIndex = 17;
			this.registrationKeyTextBox.Text = "";
			// 
			// registrationKeyLabel
			// 
			this.registrationKeyLabel.Location = new System.Drawing.Point(8, 72);
			this.registrationKeyLabel.Name = "registrationKeyLabel";
			this.registrationKeyLabel.Size = new System.Drawing.Size(100, 16);
			this.registrationKeyLabel.TabIndex = 16;
			this.registrationKeyLabel.Text = "Registration Key:";
			// 
			// getNextSerialNumberButton
			// 
			this.getNextSerialNumberButton.Location = new System.Drawing.Point(192, 40);
			this.getNextSerialNumberButton.Name = "getNextSerialNumberButton";
			this.getNextSerialNumberButton.TabIndex = 15;
			this.getNextSerialNumberButton.Text = "Get Next";
			this.getNextSerialNumberButton.Click += new System.EventHandler(this.getNextSerialNumberButton_Click);
			// 
			// serialNumberTextBox
			// 
			this.serialNumberTextBox.Location = new System.Drawing.Point(8, 40);
			this.serialNumberTextBox.Name = "serialNumberTextBox";
			this.serialNumberTextBox.Size = new System.Drawing.Size(168, 20);
			this.serialNumberTextBox.TabIndex = 14;
			this.serialNumberTextBox.Text = "";
			// 
			// generateKeyButton
			// 
			this.generateKeyButton.Location = new System.Drawing.Point(36, 472);
			this.generateKeyButton.Name = "generateKeyButton";
			this.generateKeyButton.Size = new System.Drawing.Size(96, 23);
			this.generateKeyButton.TabIndex = 15;
			this.generateKeyButton.Text = "Generate Key";
			this.generateKeyButton.Click += new System.EventHandler(this.generateKeyButton_Click);
			// 
			// decodeLicenseButton
			// 
			this.decodeLicenseButton.Location = new System.Drawing.Point(148, 472);
			this.decodeLicenseButton.Name = "decodeLicenseButton";
			this.decodeLicenseButton.Size = new System.Drawing.Size(112, 23);
			this.decodeLicenseButton.TabIndex = 16;
			this.decodeLicenseButton.Text = "Decode License";
			this.decodeLicenseButton.Click += new System.EventHandler(this.decodeLicenseButton_Click);
			// 
			// regDataDbConnection
			// 
			this.regDataDbConnection.ConnectionString = @"Provider=Microsoft.Jet.OLEDB.4.0;Password="""";User ID=Admin;Data Source=\\192.168.1.80\DevDiv\SIRegKeyGenerator\regdata.mdb;Mode=ReadWrite|Share Deny None;Extended Properties="""";Jet OLEDB:System database="""";Jet OLEDB:Registry Path="""";Jet OLEDB:Database Password="""";Jet OLEDB:Engine Type=5;Jet OLEDB:Database Locking Mode=1;Jet OLEDB:Global Partial Bulk Ops=2;Jet OLEDB:Global Bulk Transactions=1;Jet OLEDB:New Database Password="""";Jet OLEDB:Create System Database=False;Jet OLEDB:Encrypt Database=False;Jet OLEDB:Don't Copy Locale on Compact=False;Jet OLEDB:Compact Without Replica Repair=False;Jet OLEDB:SFP=False";
			// 
			// customerInfoGroupBox
			// 
			this.customerInfoGroupBox.Controls.AddRange(new System.Windows.Forms.Control[] {
																							   this.companyNameTextBox,
																							   this.customerNameTextBox,
																							   this.companyNameLabel,
																							   this.customerNameLabel});
			this.customerInfoGroupBox.Location = new System.Drawing.Point(8, 8);
			this.customerInfoGroupBox.Name = "customerInfoGroupBox";
			this.customerInfoGroupBox.Size = new System.Drawing.Size(280, 80);
			this.customerInfoGroupBox.TabIndex = 17;
			this.customerInfoGroupBox.TabStop = false;
			this.customerInfoGroupBox.Text = "Customer Info";
			// 
			// companyNameTextBox
			// 
			this.companyNameTextBox.Location = new System.Drawing.Point(112, 48);
			this.companyNameTextBox.Name = "companyNameTextBox";
			this.companyNameTextBox.Size = new System.Drawing.Size(160, 20);
			this.companyNameTextBox.TabIndex = 3;
			this.companyNameTextBox.Text = "";
			// 
			// customerNameTextBox
			// 
			this.customerNameTextBox.Location = new System.Drawing.Point(112, 24);
			this.customerNameTextBox.Name = "customerNameTextBox";
			this.customerNameTextBox.Size = new System.Drawing.Size(160, 20);
			this.customerNameTextBox.TabIndex = 2;
			this.customerNameTextBox.Text = "";
			// 
			// companyNameLabel
			// 
			this.companyNameLabel.Location = new System.Drawing.Point(8, 48);
			this.companyNameLabel.Name = "companyNameLabel";
			this.companyNameLabel.Size = new System.Drawing.Size(100, 16);
			this.companyNameLabel.TabIndex = 1;
			this.companyNameLabel.Text = "Company Name";
			// 
			// customerNameLabel
			// 
			this.customerNameLabel.Location = new System.Drawing.Point(8, 24);
			this.customerNameLabel.Name = "customerNameLabel";
			this.customerNameLabel.Size = new System.Drawing.Size(96, 16);
			this.customerNameLabel.TabIndex = 0;
			this.customerNameLabel.Text = "Customer Name:";
			// 
			// regDataDbDataAdapter
			// 
			this.regDataDbDataAdapter.DeleteCommand = this.regDataDeleteCommand;
			this.regDataDbDataAdapter.InsertCommand = this.regDataInsertCommand;
			this.regDataDbDataAdapter.SelectCommand = this.regDataSelectCommand;
			this.regDataDbDataAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
																										   new System.Data.Common.DataTableMapping("Table", "RegData", new System.Data.Common.DataColumnMapping[] {
																																																					  new System.Data.Common.DataColumnMapping("ID", "ID"),
																																																					  new System.Data.Common.DataColumnMapping("CustomerName", "CustomerName"),
																																																					  new System.Data.Common.DataColumnMapping("CompanyName", "CompanyName"),
																																																					  new System.Data.Common.DataColumnMapping("SerialNumber", "SerialNumber"),
																																																					  new System.Data.Common.DataColumnMapping("RegistrationKey", "RegistrationKey"),
																																																					  new System.Data.Common.DataColumnMapping("DaysValid", "DaysValid"),
																																																					  new System.Data.Common.DataColumnMapping("LicensesPurchased", "LicensesPurchased"),
																																																					  new System.Data.Common.DataColumnMapping("Product", "Product"),
																																																					  new System.Data.Common.DataColumnMapping("CustomerType", "CustomerType"),
																																																					  new System.Data.Common.DataColumnMapping("KeyVersion", "KeyVersion"),
																																																					  new System.Data.Common.DataColumnMapping("Functionality", "Functionality")})});
			this.regDataDbDataAdapter.UpdateCommand = this.regDataUpdateCommand;
			// 
			// regDataDeleteCommand
			// 
			this.regDataDeleteCommand.CommandText = "DELETE FROM RegData WHERE (ID = ?) AND (CompanyName = ? OR ? IS NULL AND CompanyN" +
				"ame IS NULL) AND (CustomerName = ? OR ? IS NULL AND CustomerName IS NULL) AND (R" +
				"egistrationKey = ? OR ? IS NULL AND RegistrationKey IS NULL) AND (SerialNumber =" +
				" ?)";
			this.regDataDeleteCommand.Connection = this.regDataDbConnection;
			this.regDataDeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "ID", System.Data.DataRowVersion.Original, null));
			this.regDataDeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CompanyName", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "CompanyName", System.Data.DataRowVersion.Original, null));
			this.regDataDeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CompanyName1", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "CompanyName", System.Data.DataRowVersion.Original, null));
			this.regDataDeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CustomerName", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "CustomerName", System.Data.DataRowVersion.Original, null));
			this.regDataDeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CustomerName1", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "CustomerName", System.Data.DataRowVersion.Original, null));
			this.regDataDeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_RegistrationKey", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "RegistrationKey", System.Data.DataRowVersion.Original, null));
			this.regDataDeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_RegistrationKey1", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "RegistrationKey", System.Data.DataRowVersion.Original, null));
			this.regDataDeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SerialNumber", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "SerialNumber", System.Data.DataRowVersion.Original, null));
			// 
			// regDataInsertCommand
			// 
			this.regDataInsertCommand.CommandText = "INSERT INTO RegData(CompanyName, CustomerName, CustomerType, DaysValid, Functiona" +
				"lity, KeyVersion, LicensesPurchased, Product, RegistrationKey, SerialNumber) VAL" +
				"UES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
			this.regDataInsertCommand.Connection = this.regDataDbConnection;
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CompanyName", System.Data.OleDb.OleDbType.VarWChar, 50, "CompanyName"));
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CustomerName", System.Data.OleDb.OleDbType.VarWChar, 50, "CustomerName"));
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CustomerType", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "CustomerType", System.Data.DataRowVersion.Current, null));
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("DaysValid", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "DaysValid", System.Data.DataRowVersion.Current, null));
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Functionality", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "Functionality", System.Data.DataRowVersion.Current, null));
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("KeyVersion", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "KeyVersion", System.Data.DataRowVersion.Current, null));
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("LicensesPurchased", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "LicensesPurchased", System.Data.DataRowVersion.Current, null));
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Product", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "Product", System.Data.DataRowVersion.Current, null));
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("RegistrationKey", System.Data.OleDb.OleDbType.VarWChar, 50, "RegistrationKey"));
			this.regDataInsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SerialNumber", System.Data.OleDb.OleDbType.VarWChar, 50, "SerialNumber"));
			// 
			// regDataSelectCommand
			// 
			this.regDataSelectCommand.CommandText = "SELECT CompanyName, CustomerName, CustomerType, DaysValid, Functionality, ID, Key" +
				"Version, LicensesPurchased, Product, RegistrationKey, SerialNumber FROM RegData";
			this.regDataSelectCommand.Connection = this.regDataDbConnection;
			// 
			// regDataUpdateCommand
			// 
			this.regDataUpdateCommand.CommandText = @"UPDATE RegData SET CompanyName = ?, CustomerName = ?, CustomerType = ?, DaysValid = ?, Functionality = ?, KeyVersion = ?, LicensesPurchased = ?, Product = ?, RegistrationKey = ?, SerialNumber = ? WHERE (ID = ?) AND (CompanyName = ? OR ? IS NULL AND CompanyName IS NULL) AND (CustomerName = ? OR ? IS NULL AND CustomerName IS NULL) AND (RegistrationKey = ? OR ? IS NULL AND RegistrationKey IS NULL) AND (SerialNumber = ?)";
			this.regDataUpdateCommand.Connection = this.regDataDbConnection;
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CompanyName", System.Data.OleDb.OleDbType.VarWChar, 50, "CompanyName"));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CustomerName", System.Data.OleDb.OleDbType.VarWChar, 50, "CustomerName"));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("CustomerType", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "CustomerType", System.Data.DataRowVersion.Current, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("DaysValid", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "DaysValid", System.Data.DataRowVersion.Current, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Functionality", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "Functionality", System.Data.DataRowVersion.Current, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("KeyVersion", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "KeyVersion", System.Data.DataRowVersion.Current, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("LicensesPurchased", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "LicensesPurchased", System.Data.DataRowVersion.Current, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Product", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "Product", System.Data.DataRowVersion.Current, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("RegistrationKey", System.Data.OleDb.OleDbType.VarWChar, 50, "RegistrationKey"));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("SerialNumber", System.Data.OleDb.OleDbType.VarWChar, 50, "SerialNumber"));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_ID", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, false, ((System.Byte)(10)), ((System.Byte)(0)), "ID", System.Data.DataRowVersion.Original, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CompanyName", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "CompanyName", System.Data.DataRowVersion.Original, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CompanyName1", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "CompanyName", System.Data.DataRowVersion.Original, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CustomerName", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "CustomerName", System.Data.DataRowVersion.Original, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_CustomerName1", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "CustomerName", System.Data.DataRowVersion.Original, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_RegistrationKey", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "RegistrationKey", System.Data.DataRowVersion.Original, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_RegistrationKey1", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "RegistrationKey", System.Data.DataRowVersion.Original, null));
			this.regDataUpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_SerialNumber", System.Data.OleDb.OleDbType.VarWChar, 50, System.Data.ParameterDirection.Input, false, ((System.Byte)(0)), ((System.Byte)(0)), "SerialNumber", System.Data.DataRowVersion.Original, null));
			// 
			// SiRegKeyGenerator
			// 
			this.AutoScaleBaseSize = new System.Drawing.Size(5, 13);
			this.ClientSize = new System.Drawing.Size(296, 502);
			this.Controls.AddRange(new System.Windows.Forms.Control[] {
																		  this.customerInfoGroupBox,
																		  this.decodeLicenseButton,
																		  this.generateKeyButton,
																		  this.snKeyGroupBox,
																		  this.licenseDetailsGroupBox,
																		  this.licenseTypeGroupBox});
			this.Name = "SiRegKeyGenerator";
			this.Text = "SIRegKeyGenerator";
			this.Load += new System.EventHandler(this.SiRegKeyGenerator_Load);
			this.licenseTypeGroupBox.ResumeLayout(false);
			this.licenseDetailsGroupBox.ResumeLayout(false);
			((System.ComponentModel.ISupportInitialize)(this.numDaysValidNumericUpDown)).EndInit();
			((System.ComponentModel.ISupportInitialize)(this.numLicensesNumericUpDown)).EndInit();
			this.snKeyGroupBox.ResumeLayout(false);
			this.customerInfoGroupBox.ResumeLayout(false);
			this.ResumeLayout(false);

		}
		#endregion

		//*************************************************************************
		// Method:		Main
		// Description: the entry point to this application
		//
		// Parameters:
		//	None
		//
		// Return Value: None
		//*************************************************************************
		[STAThread]
		static void Main() 
		{
			Application.Run(new SiRegKeyGenerator());
		}

		//*************************************************************************
		// Method:		siteLicenseCheckBox_CheckedChanged
		// Description: called when the user clicks the site license check box
		//
		// Parameters:
		//	sender - the sender of the event
		//	e - the args representing the event
		//
		// Return Value: None
		//*************************************************************************
		private void siteLicenseCheckBox_CheckedChanged(object sender, System.EventArgs e)
		{
			if (siteLicenseCheckBox.Checked)
			{
				numLicensesNumericUpDown.Enabled = false;
			}
			else
			{
				numLicensesNumericUpDown.Enabled = true;
			}
		}

		//*************************************************************************
		// Method:		noExpirationCheckBox_CheckedChanged
		// Description: called when the user clicks the no expiration check box
		//
		// Parameters:
		//	sender - the sender of the event
		//	e - the args representing the event
		//
		// Return Value: None
		//*************************************************************************
		private void noExpriationCheckBox_CheckedChanged(object sender, System.EventArgs e)
		{
			if (noExpirationCheckBox.Checked)
			{
				numDaysValidNumericUpDown.Enabled = false;
			}
			else
			{
				numDaysValidNumericUpDown.Enabled = true;
			}
		}

		//*************************************************************************
		// Method:		SiRegKeyGenerator_Load
		// Description: called when the UI window loads
		//
		// Parameters:
		//	sender - the sender of the event
		//	e - the args representing the event
		//
		// Return Value: None
		//*************************************************************************
		private void SiRegKeyGenerator_Load(object sender, System.EventArgs e)
		{
			productComboBox.SelectedIndex = 0;
			customerTypeComboBox.SelectedIndex = 0;
			functionalityComboBox.SelectedIndex = 2;
			keyVersionComboBox.SelectedIndex = 0;
		}

		//*************************************************************************
		// Method:		generateKeyButton_Click
		// Description: called when the user clicks the generate button
		//
		// Parameters:
		//	sender - the sender of the event
		//	e - the args representing the event
		//
		// Return Value: None
		//*************************************************************************
		private void generateKeyButton_Click(object sender, System.EventArgs e)
		{
			// store the data in a registration data object
			ManagedRegistrationData data = new ManagedRegistrationData();
			data.CustType = customerTypeComboBox.SelectedIndex;
			data.Functionality = functionalityComboBox.SelectedIndex;
			data.Product = productComboBox.SelectedIndex;
			if (noExpirationCheckBox.Checked)
				data.NumberOfDaysValid = 0;
			else
				data.NumberOfDaysValid = (int)numDaysValidNumericUpDown.Value;
			if (siteLicenseCheckBox.Checked)
				data.NumberOfLicensesPurchased = 0;
			else
				data.NumberOfLicensesPurchased = (uint)numLicensesNumericUpDown.Value;
			data.SerialNumber = serialNumberTextBox.Text;
			data.RegistrationKey = registrationKeyTextBox.Text;

			// generate the key
			if (!ManagedRegistrationKeyGenerator.GetInstance().GenerateRegistrationKey(data))
			{
				MessageBox.Show("Could not generate key");
				return;
			}

			// save the data to the database
			try
			{
				regDataDbConnection.Open();

				regDataDbDataAdapter.InsertCommand.CommandText = "INSERT INTO RegData(CompanyName, CustomerName, CustomerType, DaysValid, Functionality, KeyVersion, LicensesPurchased, Product, RegistrationKey, SerialNumber) VALUES (" +
					"'" + companyNameTextBox.Text + "', " +
					"'" + customerNameTextBox.Text + "', " +
					(data.CustType + 1) + ", " +
					data.NumberOfDaysValid + ", " +
					(data.Functionality + 1) + ", " +
					(data.KeyVersion + 1) + ", " +
					data.NumberOfLicensesPurchased + ", " +
					(data.Product + 1) + ", " +
					"'" + data.RegistrationKey + "', " +
					"'" + data.SerialNumber + "')";

				regDataDbDataAdapter.InsertCommand.ExecuteNonQuery();

				regDataDbConnection.Close();

				MessageBox.Show("Key Generated Successfully!\nData Saved to the Database!");
			}
			catch(System.Data.OleDb.OleDbException)
			{
				MessageBox.Show("Could not save data to the database!");
			}

			// fill out all the UI fields with the new data
			customerTypeComboBox.SelectedIndex = data.CustType;
			functionalityComboBox.SelectedIndex = data.Functionality;
			productComboBox.SelectedIndex = data.Product;

			if (data.NumberOfDaysValid == 0)
			{
				numDaysValidNumericUpDown.Enabled = false;
				numDaysValidNumericUpDown.Value = 1;
				noExpirationCheckBox.Checked = true;
			}
			else
			{
				noExpirationCheckBox.Checked = false;
				numDaysValidNumericUpDown.Enabled = true;
				numDaysValidNumericUpDown.Value = data.NumberOfDaysValid;
			}

			if (data.NumberOfLicensesPurchased == 0)
			{
				siteLicenseCheckBox.Checked = true;
				numLicensesNumericUpDown.Value = 1;
				numLicensesNumericUpDown.Enabled = false;
			}
			else
			{
				siteLicenseCheckBox.Checked = false;
				numLicensesNumericUpDown.Value = data.NumberOfLicensesPurchased;
				numLicensesNumericUpDown.Enabled = true;
			}
			serialNumberTextBox.Text = data.SerialNumber;
			registrationKeyTextBox.Text = data.RegistrationKey;
		}

		private void decodeLicenseButton_Click(object sender, System.EventArgs e)
		{
			// store the data in a registration data object
			ManagedRegistrationData data = new ManagedRegistrationData();
			data.CustType = customerTypeComboBox.SelectedIndex;
			data.Functionality = functionalityComboBox.SelectedIndex;
			data.Product = productComboBox.SelectedIndex;
			if (noExpirationCheckBox.Checked)
				data.NumberOfDaysValid = 0;
			else
				data.NumberOfDaysValid = (int)numDaysValidNumericUpDown.Value;

			if (siteLicenseCheckBox.Checked)
				data.NumberOfLicensesPurchased = 0;
			else
				data.NumberOfLicensesPurchased = (uint)numLicensesNumericUpDown.Value;
			data.SerialNumber = serialNumberTextBox.Text;
			data.RegistrationKey = registrationKeyTextBox.Text;

			// decode the key
			if (!ManagedRegistrationKeyGenerator.GetInstance().DecodeRegistrationKey(data))
			{
				MessageBox.Show("Could not decode key successfully");
				return;
			}

			// fill in the ui fields with the new data
			customerTypeComboBox.SelectedIndex = data.CustType;
			functionalityComboBox.SelectedIndex = data.Functionality;
			productComboBox.SelectedIndex = data.Product;
			if (data.NumberOfDaysValid == 0)
			{
				numDaysValidNumericUpDown.Enabled = false;
				numDaysValidNumericUpDown.Value = 1;
				noExpirationCheckBox.Checked = true;
			}
			else
			{
				noExpirationCheckBox.Checked = false;
				numDaysValidNumericUpDown.Enabled = true;
				numDaysValidNumericUpDown.Value = data.NumberOfDaysValid;
			}

			if (data.NumberOfLicensesPurchased == 0)
			{
				siteLicenseCheckBox.Checked = true;
				numLicensesNumericUpDown.Value = 1;
				numLicensesNumericUpDown.Enabled = false;
			}
			else
			{
				siteLicenseCheckBox.Checked = false;
				numLicensesNumericUpDown.Value = data.NumberOfLicensesPurchased;
				numLicensesNumericUpDown.Enabled = true;
			}
			serialNumberTextBox.Text = data.SerialNumber;
			registrationKeyTextBox.Text = data.RegistrationKey;
		}

		//*************************************************************************
		// Method:		getNextSerialNumberButton_Click
		// Description: called when the user clicks the Get Next button
		//
		// Parameters:
		//	sender - the sender of the event
		//	e - the args representing the event
		//
		// Return Value: None
		//*************************************************************************
		private void getNextSerialNumberButton_Click(object sender, System.EventArgs e)
		{
			try
			{
				regDataDbConnection.Open();

				regDataDbDataAdapter.SelectCommand.CommandText = "SELECT SerialNumber FROM RegData ORDER BY SerialNumber DESC";
				System.Data.DataSet dataSet = new System.Data.DataSet();

				regDataDbDataAdapter.Fill(dataSet, "SerialNumber");

				System.Data.DataTable dataTable = dataSet.Tables[0];

				int highNumber = int.Parse((string)dataTable.Rows[0][0]);
				serialNumberTextBox.Text = string.Format("{0}", highNumber + 1);

				regDataDbConnection.Close();
			}
			catch(System.Data.OleDb.OleDbException)
			{
				MessageBox.Show("Could not query data from the database!");
			}
			catch(Exception)
			{
			}
		}
	}
}
